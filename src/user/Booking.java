package user;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

public class Booking extends javax.swing.JFrame {

    private static String username;
    /**
     * Creates new form Booking
     */
    Connection con;
    
    public Booking(String username) {
        initComponents();
        
        this.username = username;
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Bus-Favicon.png")));
        this.setTitle("CITY TRAVELS");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        this.con = makeCon();
        setData(con);
        
        TableHeader();
    }
    
    public Booking() {
        initComponents();
        
    }
    
    private void TableHeader()
    {
        JTableHeader thead = tbl_bustt.getTableHeader();
        thead.setBackground(Color.BLACK);
        thead.setFont(new Font("Times New Roman", Font.BOLD, 16));
        
        TableColumn col1 = tbl_bustt.getColumnModel().getColumn(0);
        col1.setPreferredWidth(75);
        TableColumn col2 = tbl_bustt.getColumnModel().getColumn(1);
        col2.setPreferredWidth(135);
        TableColumn col3 = tbl_bustt.getColumnModel().getColumn(2);
        col3.setPreferredWidth(135);
        TableColumn col4 = tbl_bustt.getColumnModel().getColumn(3);
        col4.setPreferredWidth(105);
        TableColumn col5 = tbl_bustt.getColumnModel().getColumn(4);
        col5.setPreferredWidth(120);
        TableColumn col6 = tbl_bustt.getColumnModel().getColumn(5);
        col6.setPreferredWidth(120);
        TableColumn col7 = tbl_bustt.getColumnModel().getColumn(6);
        col7.setPreferredWidth(79);
        
    }
    
    private Connection makeCon(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/city_travels", "root", "mysql@123");
            return con;
        }
        catch(ClassNotFoundException | SQLException e){
            System.out.println(e);
            return null;
        }
    }
    
    private void setModel(){
        String[] cln = {"Bus No.", "From", "To", "Date", "Departure Time", "Available Seats", "Price"};
        tbl_bustt.setModel(new DefaultTableModel(cln, 0));
        TableHeader();
    }
    
    private void setData(Connection con){
        try {
            String q = "select * from bus_schedule";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(q);
            while(rs.next()){
                String b_no = rs.getString(1);
                String f = rs.getString(2);
                String t = rs.getString(3);
                String dt = rs.getString(4);
                String dd_time = rs.getString(5);
                String s_seats = String.valueOf(rs.getInt(6));
                String p_price = String.valueOf(rs.getInt(7));
                
                String tbData[] = {b_no, f, t, dt, dd_time, s_seats, p_price};
                DefaultTableModel tbm = (DefaultTableModel) tbl_bustt.getModel();
                
                tbm.addRow(tbData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Booking.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_bustt = new javax.swing.JTable();
        booking_back = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_from = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_to = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 32)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user/book_bus_Img.png"))); // NOI18N
        jLabel1.setText("  BOOK YOUR BUS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 19, 850, 60));

        tbl_bustt.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tbl_bustt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bus No.", "From", "To", "Date", "Departure Time", "Available Seats", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_bustt.setRowHeight(25);
        tbl_bustt.getTableHeader().setReorderingAllowed(false);
        tbl_bustt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_busttMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_bustt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 250, 771, 260));

        booking_back.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        booking_back.setText("Back");
        booking_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booking_backActionPerformed(evt);
            }
        });
        getContentPane().add(booking_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 540, 90, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("From  :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        txt_from.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        getContentPane().add(txt_from, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 127, 224, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setText("To  :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 130, 37, -1));

        txt_to.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        getContentPane().add(txt_to, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 127, 223, -1));

        btn_search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_search.setText("Search");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });
        getContentPane().add(btn_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 183, 90, -1));

        btn_reset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });
        getContentPane().add(btn_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 183, 89, -1));

        jPanel1.setBackground(new java.awt.Color(238, 78, 52));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 100));

        jPanel2.setBackground(new java.awt.Color(252, 237, 218));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("* Select Bus to book");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addContainerGap(666, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel2)
                .addContainerGap(355, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 96, 850, 502));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void booking_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booking_backActionPerformed
        // TODO add your handling code here:
        dispose();
        User_Dashboard ud = new User_Dashboard(username);
    }//GEN-LAST:event_booking_backActionPerformed

    String bus_no,from,to,date,d_time,dd,booked_time;
    int seats,no,price,total_p;
    
    private void tbl_busttMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_busttMouseClicked
        // TODO add your handling code here:
        
        int index = tbl_bustt.getSelectedRow();
        TableModel tbl = tbl_bustt.getModel();
        bus_no = tbl.getValueAt(index, 0).toString();
        from = tbl.getValueAt(index, 1).toString();
        to = tbl.getValueAt(index, 2).toString();
        date = tbl.getValueAt(index, 3).toString();
        d_time = tbl.getValueAt(index, 4).toString();
        seats = Integer.parseInt(tbl.getValueAt(index, 5).toString());
        price = Integer.parseInt(tbl.getValueAt(index, 6).toString());
        
        int i = JOptionPane.showConfirmDialog(null, "Do you want to book seats?", "Confirmation", JOptionPane.YES_NO_OPTION);
        
        if(i == 0)
        {
            int flag = 0;
            String s = JOptionPane.showInputDialog(null, "Enter the number of seats you want to book...  ");
            
            int k, ch = 0;
            for(k=0; k<s.length(); k++)
            {
                ch = s.charAt(k);
                if(ch>=48 && ch<=57) {
                    continue;
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please, Enter a integer number...!!");
                    flag = 1;
                    break;
                }
            }       
                    
            if(flag == 0)
            {
                if(s.isEmpty())
                {
                    JOptionPane.showMessageDialog(null, "Please, Enter your seats...!!");
                }
                else
                {
                    no = Integer.parseInt(s);
                    if(no>seats)
                    {
                        JOptionPane.showMessageDialog(null, "There are only " + seats + " seats available...!!");
                    }
                    else
                    {
                        seats -= no;
                        //tbl_bustt.setValueAt(seats, index, 5);
                        
                        total_p = no*price;
                        JOptionPane.showMessageDialog(null, "Your seats are booked...\nTotal Amount = "+total_p+" ₨");
                    
                        Calendar cc = Calendar.getInstance();
                        dd = cc.get(Calendar.DATE) + "-" + (cc.get(Calendar.MONTH)+1) + "-" + cc.get(Calendar.YEAR);
                        //System.out.print("Today's Date : "+dd);
                        
                        booked_time = new SimpleDateFormat("hh:mm:ss").format(Calendar.getInstance().getTime());
                        System.out.print("\n Current Time : "+booked_time);
                        
                        String b_time = new SimpleDateFormat("hh_mm_ss").format(Calendar.getInstance().getTime());
                        
                        //Enter your data base code here.
                        //Connection cn = makeCon();
                        getData(con);
                        /* 💀 */
                        
                        File ff = new File("c:\\City Bus\\User Bookings\\User_"+username+"\\Bus_"+bus_no+"\\"+dd);
                        File f2 = new File("c:\\City Bus\\User Bookings\\User_"+username+"\\BookingTimes.txt");
                        try
                        {
                            // For first time of Booking...
                            if(!ff.exists())
                                ff.mkdirs();
                            
                            if(!f2.exists())
                            {
                                f2.createNewFile();
                                
                                FileWriter fwrite = new FileWriter(f2);
                                fwrite.write(dd+"-"+b_time+"\n");
                                fwrite.close();
                            }
                            else    // After first time Booking...
                            {
                                try 
                                {
                                    FileReader fr3 = new FileReader("c:\\City Bus\\User Bookings\\User_"+username+"\\BookingTimes.txt");
                                    BufferedReader br = new BufferedReader(fr3);
                                
                                    String newline = "", data = "";
                                
                                    while(newline != null)
                                    {        
                                        newline = br.readLine(); 
                                        
                                        // util new line (null) is not come that times old data is
                                        // stored in variable 'data'
                                        if(newline != null) {    
                                            data = data + newline + "\n";
                                        }
                                        else {
                                            FileWriter filewrite = new FileWriter(f2);
                                
                                            filewrite.write(dd+"-"+b_time+"\n"+data);
                                            filewrite.close();
                                        }
                                    }
                                    fr3.close();
                                }
                                catch(Exception e)
                                {
                                    System.out.print("\n FILE UPDATE WRITE ERROR : "+e.getMessage());
                                }
                                
                            }
                        }
                        catch(Exception e)
                        {
                            System.out.print("\n FOLDER CREATE ERROR 404: "+e.getMessage());
                        }
                        
                        File file = new File("c:\\City Bus\\User Bookings\\User_"+username+"\\Bus_"+bus_no+"\\"+dd+"\\Time_"+dd+"-"+b_time+".txt");
                        try 
                        {
                            file.createNewFile();
                            
                            try
                            {
                                FileWriter fw = new FileWriter(file);
                                fw.write(bus_no+"\n"+from+"\n"+to+"\n"+date+"\n"+d_time+"\n"+dd+"\n"+booked_time+"\n"+no+"\n"+total_p);
                                fw.close();
                                
                                dispose();
                                User_Dashboard ud = new User_Dashboard(username);
                      
                            }
                            catch(Exception e)
                            {
                                System.out.print("\n FILE WRITE ERROR : "+e.getMessage());
                            }
                            
                        } 
                        catch (Exception e) 
                        {
                            System.out.print("\n FILE CREATE ERROR 404 : "+e.getMessage());
                        }
                        
                    }
                }
            }
        }
    }//GEN-LAST:event_tbl_busttMouseClicked

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // TODO add your handling code here:
        txt_from.setText("");
        txt_to.setText("");
        setModel();
        setData(con);
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        // TODO add your handling code here:
        search(con);
    }//GEN-LAST:event_btn_searchActionPerformed

    private void getData(Connection con){
        try {
            String q = "insert into user_bookings(username,bus_no,f,t,dt,departure_time,booked_date,time_of_booking,no_of_seats,price) values(?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement ps = con.prepareStatement(q);
            ps.setString(1, username);
            ps.setString(2, bus_no);
            ps.setString(3, from);
            ps.setString(4, to);
            ps.setString(5, date);
            ps.setString(6, d_time);
            ps.setString(7, dd);
            ps.setString(8, booked_time);
            ps.setInt(9, no);
            ps.setInt(10, total_p);
            ps.executeUpdate();
            
            String q2 = "update bus_schedule set available_seats = ? where bus_no = ? and dt = ? and departure_time = ?";
            PreparedStatement pss = con.prepareStatement(q2);
            pss.setInt(1, seats);
            pss.setString(2, bus_no);
            pss.setString(3, date);
            pss.setString(4, d_time);
            pss.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Booking.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private int fCount(Connection con, String from){
        try {
            String q = "select count(*) from bus_schedule where f = ?";
            PreparedStatement ps = con.prepareStatement(q);
            ps.setString(1, from);
            ResultSet rs = ps.executeQuery();
            int cnt = 0;
            while(rs.next()){
                cnt = rs.getInt(1);
            }
            return cnt;
        } catch (SQLException ex) {
            Logger.getLogger(Booking.class.getName()).log(Level.SEVERE, null, ex);
            return 0;
        }
    }
    
    private int tCount(Connection con, String to){
        try {
            String q = "select count(*) from bus_schedule where t = ?";
            PreparedStatement ps = con.prepareStatement(q);
            ps.setString(1, to);
            ResultSet rs = ps.executeQuery();
            int cnt = 0;
            while(rs.next()){
                cnt = rs.getInt(1);
            }
            return cnt;
        } catch (SQLException ex) {
            Logger.getLogger(Booking.class.getName()).log(Level.SEVERE, null, ex);
            return 0;
        }
    }
    
    private void search(Connection con){
                try {
                    String from = txt_from.getText();
                    String to = txt_to.getText();
                if(from.isBlank() || to.isBlank()){
                    JOptionPane.showMessageDialog(null, "Please enter place/places!!!");
                }
                else{
                    int c1 = fCount(con, from);
                    int c2 = tCount(con, to);
                    if(c1 == 0 || c2 == 0){
                        JOptionPane.showMessageDialog(null, "No bus found going from " + from + " to " + to);
                    }
                    else{
                        String q = "select * from bus_schedule where f=? and t=?";
                        PreparedStatement ps = con.prepareStatement(q);
                        ps.setString(1, from);
                        ps.setString(2, to);
                        ResultSet rs = ps.executeQuery();
                        while(rs.next()){
                            String b_no = rs.getString(1);
                            String f = rs.getString(2);
                            String t = rs.getString(3);
                            String dt = rs.getString(4);
                            String dd_time = rs.getString(5);
                            String s_seats = String.valueOf(rs.getInt(6));
                            String p_price = String.valueOf(rs.getInt(7));
                            String[] cln = {"Bus No.", "From", "To", "Date", "Departure Time", "Available Seats", "Price"};
                            tbl_bustt.setModel(new DefaultTableModel(cln, 0));
                            TableHeader();
                            DefaultTableModel dtbl = (DefaultTableModel)tbl_bustt.getModel();
                            String[] tData = {b_no, f, t, dt, dd_time, s_seats, p_price};
                            dtbl.addRow(tData);
                        }
                    }
                }
                } catch (SQLException ex) {
                    Logger.getLogger(Booking.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Booking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton booking_back;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_bustt;
    private javax.swing.JTextField txt_from;
    private javax.swing.JTextField txt_to;
    // End of variables declaration//GEN-END:variables
}
